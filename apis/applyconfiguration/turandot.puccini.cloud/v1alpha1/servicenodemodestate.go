// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/tliron/turandot/resources/turandot.puccini.cloud/v1alpha1"
)

// ServiceNodeModeStateApplyConfiguration represents an declarative configuration of the ServiceNodeModeState type for use
// with apply.
type ServiceNodeModeStateApplyConfiguration struct {
	Mode    *string             `json:"mode,omitempty"`
	State   *v1alpha1.ModeState `json:"state,omitempty"`
	Message *string             `json:"message,omitempty"`
}

// ServiceNodeModeStateApplyConfiguration constructs an declarative configuration of the ServiceNodeModeState type for use with
// apply.
func ServiceNodeModeState() *ServiceNodeModeStateApplyConfiguration {
	return &ServiceNodeModeStateApplyConfiguration{}
}

// WithMode sets the Mode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mode field is set to the value of the last call.
func (b *ServiceNodeModeStateApplyConfiguration) WithMode(value string) *ServiceNodeModeStateApplyConfiguration {
	b.Mode = &value
	return b
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *ServiceNodeModeStateApplyConfiguration) WithState(value v1alpha1.ModeState) *ServiceNodeModeStateApplyConfiguration {
	b.State = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *ServiceNodeModeStateApplyConfiguration) WithMessage(value string) *ServiceNodeModeStateApplyConfiguration {
	b.Message = &value
	return b
}
